[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "iac-cli"
version = "0.1.0"
description = "AI-powered Infrastructure as Code validation and fixing tool"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "typer>=0.9.0",
    "rich>=13.7.0",
    "python-hcl2>=4.3.2",
    "boto3>=1.34.0",
    "openai>=1.12.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.6.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.5",
    "pytest-cov>=4.1.0",
    "black>=24.1.1",
    "isort>=5.13.2",
    "mypy>=1.8.0",
    "ruff>=0.2.1",
    "pre-commit>=3.6.0",
]

[project.scripts]
iac-cli = "iac_cli.cli:main"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=iac_cli --cov-report=term-missing"
asyncio_mode = "auto"

[tool.ruff]
line-length = 88
target-version = "py38"
select = ["E", "F", "B", "I"]
ignore = []

[tool.ruff.isort]
known-first-party = ["iac_cli"] 